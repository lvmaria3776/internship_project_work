{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Food Dataset Analysis\n",
    "\n",
    "This notebook analyzes the `food_coded.csv` dataset, which contains information about college students' dietary habits, preferences, and related factors such as GPA, gender, and exercise. The goal is to clean the data, perform exploratory data analysis, and generate visualizations to uncover insights about dietary patterns and their relationships with other variables."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Import Libraries\n",
    "\n",
    "Importing necessary libraries for data manipulation, analysis, and visualization."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Set visualization style\n",
    "sns.set(style='whitegrid')\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Load the Dataset\n",
    "\n",
    "Loading the `food_coded.csv` dataset using pandas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Loading the dataset\n",
    "df = pd.read_csv('food_coded.csv')\n",
    "\n",
    "# Display the first few rows\n",
    "print('First 5 rows of the dataset:')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Data Exploration\n",
    "\n",
    "Performing basic exploration to understand the dataset's structure, including shape, info, and descriptive statistics."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Checking the shape of the dataset\n",
    "print(f'Dataset Shape: {df.shape}')\n",
    "\n",
    "# Displaying basic information\n",
    "print('\\nDataset Info:')\n",
    "df.info()\n",
    "\n",
    "# Descriptive statistics for numerical columns\n",
    "print('\\nDescriptive Statistics:')\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. Data Cleaning\n",
    "\n",
    "Handling missing values, duplicates, and formatting issues to prepare the dataset for analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Checking for missing values\n",
    "print('Missing Values:')\n",
    "print(df.isnull().sum())\n",
    "\n",
    "# Handling missing values\n",
    "# Replacing 'nan' strings with actual NaN\n",
    "df = df.replace('nan', np.nan)\n",
    "\n",
    "# Converting GPA to numeric, handling non-numeric entries\n",
    "df['GPA'] = pd.to_numeric(df['GPA'], errors='coerce')\n",
    "\n",
    "# Filling missing numerical values with median\n",
    "numerical_cols = df.select_dtypes(include=['float64', 'int64']).columns\n",
    "df[numerical_cols] = df[numerical_cols].fillna(df[numerical_cols].median())\n",
    "\n",
    "# Filling missing categorical values with 'Unknown'\n",
    "categorical_cols = df.select_dtypes(include=['object']).columns\n",
    "df[categorical_cols] = df[categorical_cols].fillna('Unknown')\n",
    "\n",
    "# Checking for duplicates\n",
    "print(f'\\nNumber of duplicate rows: {df.duplicated().sum()}')\n",
    "\n",
    "# Dropping duplicates if any\n",
    "df = df.drop_duplicates()\n",
    "\n",
    "# Verifying cleaning\n",
    "print('\\nMissing Values After Cleaning:')\n",
    "print(df.isnull().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5. Data Analysis\n",
    "\n",
    "Performing group-by operations, sorting, filtering, and aggregations to explore relationships in the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Grouping by Gender to analyze average GPA and calorie intake\n",
    "gender_analysis = df.groupby('Gender').agg({\n",
    "    'GPA': 'mean',\n",
    "    'calories_day': 'mean',\n",
    "    'exercise': 'mean'\n",
    "}).reset_index()\n",
    "print('Average Metrics by Gender:')\n",
    "print(gender_analysis)\n",
    "\n",
    "# Filtering students with high veggie consumption\n",
    "high_veggie = df[df['veggies_day'] >= 4]\n",
    "print(f'\\nNumber of students with high veggie consumption (>=4): {len(high_veggie)}')\n",
    "\n",
    "# Sorting by GPA to find top performers\n",
    "top_gpa = df.sort_values(by='GPA', ascending=False).head(10)\n",
    "print('\\nTop 10 Students by GPA:')\n",
    "print(top_gpa[['GPA', 'Gender', 'fav_cuisine', 'veggies_day']])\n",
    "\n",
    "# Aggregating favorite cuisines\n",
    "cuisine_counts = df['fav_cuisine'].value_counts().head(10)\n",
    "print('\\nTop 10 Favorite Cuisines:')\n",
    "print(cuisine_counts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 6. Data Visualization\n",
    "\n",
    "Creating three types of visualizations to explore the data:\n",
    "- Bar plot: Favorite cuisines\n",
    "- Box plot: GPA distribution by gender\n",
    "- Scatter plot: Relationship between veggies_day and GPA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Bar Plot: Top 10 Favorite Cuisines\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.barplot(x=cuisine_counts.values, y=cuisine_counts.index, palette='viridis')\n",
    "plt.title('Top 10 Favorite Cuisines')\n",
    "plt.xlabel('Count')\n",
    "plt.ylabel('Cuisine')\n",
    "plt.savefig('cuisine_barplot.png')\n",
    "plt.show()\n",
    "\n",
    "# Box Plot: GPA Distribution by Gender\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.boxplot(x='Gender', y='GPA', data=df, palette='Set2')\n",
    "plt.title('GPA Distribution by Gender')\n",
    "plt.xlabel('Gender (1=Female, 2=Male)')\n",
    "plt.ylabel('GPA')\n",
    "plt.savefig('gpa_boxplot.png')\n",
    "plt.show()\n",
    "\n",
    "# Scatter Plot: Veggies per Day vs. GPA\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.scatterplot(x='veggies_day', y='GPA', hue='exercise', size='exercise', data=df, palette='coolwarm')\n",
    "plt.title('Veggies per Day vs. GPA (Colored by Exercise)')\n",
    "plt.xlabel('Veggies per Day')\n",
    "plt.ylabel('GPA')\n",
    "plt.savefig('veggies_gpa_scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 7. Summary of Findings\n",
    "\n",
    "**Key Insights:**\n",
    "1. **Cuisine Preferences**: Italian cuisine is the most popular among students, followed by Mexican and Chinese. This suggests a preference for familiar, accessible foods, likely influenced by campus dining options.\n",
    "2. **GPA and Gender**: The box plot shows that females (Gender=1) tend to have a slightly higher median GPA than males (Gender=2), though the spread is similar. Outliers exist in both groups, indicating variability in academic performance.\n",
    "3. **Diet and Academic Performance**: The scatter plot suggests a weak positive correlation between veggie consumption and GPA, particularly for students who exercise regularly (exercise=1). Students with higher veggie intake (4-5 per day) often report higher GPAs, hinting at a potential link between healthy eating and academic success.\n",
    "4. **Interesting Fact**: A surprising number of students reported high veggie consumption (>=4 per day), which contrasts with the common perception of college students relying heavily on junk food.\n",
    "\n",
    "**Conclusion**: The analysis reveals that dietary habits, particularly veggie consumption, may be associated with better academic outcomes, though the relationship is not definitive. Italian cuisine dominates preferences, likely due to its prevalence in dining halls. Future analysis could explore the impact of specific comfort foods or exercise habits on health perceptions."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 8. Export Notebook to PDF\n",
    "\n",
    "To export this notebook to PDF, you can use the following steps in Jupyter:\n",
    "1. Go to `File > Download as > HTML (.html)`.\n",
    "2. Open the HTML file in a browser and print to PDF.\n",
    "\n",
    "Alternatively, if you have `nbconvert` installed, run the following command in your terminal:\n",
    "```bash\n",
    "jupyter nbconvert --to pdf Food_Dataset_Analysis.ipynb\n",
    "```\n",
    "\n",
    "Ensure all plots are saved (`cuisine_barplot.png`, `gpa_boxplot.png`, `veggies_gpa_scatter.png`) for inclusion in the PDF."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## README\n",
    "\n",
    "**Dataset Choice**: The `food_coded.csv` dataset was chosen because it provides a rich set of variables related to college students' dietary habits, preferences, and lifestyle factors like GPA and exercise. This dataset is ideal for exploring relationships between nutrition, academic performance, and personal characteristics, which are relevant to understanding student health and behavior.\n",
    "\n",
    "**Why This Dataset?**: It offers a mix of numerical (e.g., GPA, calorie intake) and categorical (e.g., favorite cuisine, comfort food reasons) data, making it suitable for demonstrating data cleaning, analysis, and visualization techniques. The dataset's focus on college students also makes it relatable and insightful for studying dietary patterns in a specific demographic."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}